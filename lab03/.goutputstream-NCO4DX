// Name: Kevin Chan
// CS 14 Lab Section: Tue 8:10AM - 11:00AM
// Problem # 1: split list in the middle of L
#include <iostream>
#include <list>
using namespace std;

void splitDownMiddle(list<int> a, list <int>& b, list<int>& c){
    if (a.size() == 0)
        return;
    
    int num = a.size()/2;
    int number = 0;
    
    for (list<int>::iterator k = a.begin(); k != a.end(); ++k){
        if(num < number){
            b.push_back(*k);
            cout << "B contains:";
            cout << " " << *k;
        }
        if(num >= number){
            c.push_back(*k);
            cout << "C contains:";
            cout << " " << *k;
        }
    }
}


int main(){
    list <int> A;
    list <int> B;
    list <int> C;
    
    A.push_back(1);
    
    cout << "A contains";
    for (list<int>::iterator k = A.begin(); k != A.end(); ++k)
        cout << " " << *k;
    
    splitDownMiddle(A,B,C);
    
    return 0;
}
