#include <iostream>
#include <vector>
#include <cstdlib>
#include <string>

using namespace std;

enum status (free, active, deactivated);

Template <Typename t>

class Node{
    public:
        const string key;
        t value;
        status currentStatus;
        
    Node()
    : status(free){}
    
    Node(string k, t val)
    : currentStatus(active), key(k), value(val)
    {}
    
    }
    
class hashMap{
    
    private:
        vector <Node <t> > mappedValues;
        
    public:
        hashMap()
        : mappedValues(NULL)
        {}
        
        hashMap(hashMap &);
        hashMap & operator = (hashmap &);
        ~hashMap();
        t& operator[] (string ki);
        iterator find(int l);
        
        iterator begin(){
            return mappedValues.begin();
        }
        
        iterator end(){
            return mappedValues.end();
        }
